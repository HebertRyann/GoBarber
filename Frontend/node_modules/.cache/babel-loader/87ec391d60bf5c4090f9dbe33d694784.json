{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/Hooks/Toast.tsx\";\nimport React, { createContext, useContext, useCallback } from 'react';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const addToast = useCallback(() => {}, []);\n  const removeToast = useCallback(() => {}, []);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used whitin a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/dev/√Årea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/Hooks/Toast.tsx"],"names":["React","createContext","useContext","useCallback","ToastContext","ToastProvider","children","addToast","removeToast","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,QAA8D,OAA9D;AAOA,MAAMC,YAAY,GAAGH,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMI,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,QAAQ,GAAGJ,WAAW,CAAC,MAAM,CAAE,CAAT,EAAU,EAAV,CAA5B;AACA,QAAMK,WAAW,GAAGL,WAAW,CAAC,MAAM,CAAE,CAAT,EAAU,EAAV,CAA/B;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEI,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAMD,CATD;;AAWA,SAASG,QAAT,GAAsC;AACpC,QAAMC,OAAO,GAAGR,UAAU,CAACE,YAAD,CAA1B;;AAEA,MAAG,CAACM,OAAJ,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;AAED,SAASL,aAAT,EAAwBI,QAAxB","sourcesContent":["import React, { createContext, useContext, useCallback } from 'react';\n\ninterface   ToastContextData{\n  addToast(): void;\n  removeToast(): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const addToast = useCallback(() => {},[]);\n  const removeToast = useCallback(() => {},[]);\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n    </ToastContext.Provider>\n\n  );\n}\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if(!context){\n    throw new Error('useToast must be used whitin a ToastProvider')\n  }\n  return context;\n}\n\nexport { ToastProvider, useToast }; "]},"metadata":{},"sourceType":"module"}