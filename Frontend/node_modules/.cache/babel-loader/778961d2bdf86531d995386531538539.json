{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Profile/index.tsx\";\n\n/* eslint-disable camelcase */\nimport React, { useCallback, useRef } from 'react';\nimport { FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\n\nconst Profile = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6, 'no minimo 6 caracteres')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/users', data);\n      history.push('/');\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errros = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Meu Perfil\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Confirma Altera\\xE7oes\"))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Profile/index.tsx"],"names":["React","useCallback","useRef","FiMail","FiUser","FiLock","Form","Yup","getValidationErrors","Container","Content","Input","Button","useHistory","api","useToast","Profile","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","password","min","validate","abortEarly","post","push","type","title","description","err","ValidationError","errros"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { useCallback, useRef } from 'react';\nimport { FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\n\ninterface ProfileDataForm {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(async (data: ProfileDataForm) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6, 'no minimo 6 caracteres'),\n      });\n      await schema.validate(data, { abortEarly: false });\n\n      await api.post('/users', data);\n      history.push('/')\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      })\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n\n        const errros = getValidationErrors(err)\n\n        formRef.current?.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n\n\n  }, [addToast, history]);\n\n  return (\n    <Container>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Meu Perfil</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n          <Button type=\"submit\">Confirma Alteraçoes</Button>\n        </Form>\n      </Content>\n\n    </Container>\n  );\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}