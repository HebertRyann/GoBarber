{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Profile/index.tsx\";\n\n/* eslint-disable camelcase */\nimport React, { useCallback, useRef } from 'react';\nimport { FiMail, FiUser, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content, AvatarInput } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\nimport { useAuth } from '../../Hooks/Auth';\n\nconst Profile = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const {\n    user,\n    updateUser\n  } = useAuth();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6, 'no minimo 6 caracteres')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/users', data);\n      history.push('/');\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errros = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n  }, [addToast, history]);\n  const handleAvatarChange = useCallback(event => {\n    if (event.target.files) {\n      const data = new FormData();\n      data.append('avatar', event.target.files[0]);\n      api.patch('users/avatar', data).then(response => {\n        updateUser(response.data);\n        addToast({\n          type: 'success',\n          title: 'Avatar Atualizado'\n        });\n      });\n    }\n  }, [addToast, updateUser]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    initialData: {\n      name: user.name,\n      email: user.email\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AvatarInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiCamera, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"avatar\",\n    onChange: handleAvatarChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Meu Perfil\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"old_password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha Atual\",\n    constainerStyle: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Nova Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password_confirmation\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Confirma Nova Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Confirma Altera\\xE7oes\"))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Profile/index.tsx"],"names":["React","useCallback","useRef","FiMail","FiUser","FiLock","FiCamera","FiArrowLeft","Form","Yup","getValidationErrors","Container","Content","AvatarInput","Input","Button","Link","useHistory","api","useToast","useAuth","Profile","formRef","addToast","history","user","updateUser","handleSubmit","data","current","setErrors","schema","object","shape","name","string","required","email","password","min","validate","abortEarly","post","push","type","title","description","err","ValidationError","errros","handleAvatarChange","event","target","files","FormData","append","patch","then","response","avatar_url","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { ChangeEvent, useCallback, useRef } from 'react';\nimport { FiMail, FiUser, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Container, Content, AvatarInput } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\nimport { useAuth } from '../../Hooks/Auth';\n\ninterface ProfileDataForm {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n  const { user, updateUser } = useAuth();\n\n  const handleSubmit = useCallback(async (data: ProfileDataForm) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6, 'no minimo 6 caracteres'),\n      });\n      await schema.validate(data, { abortEarly: false });\n\n      await api.post('/users', data);\n      history.push('/')\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      })\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n\n        const errros = getValidationErrors(err)\n\n        formRef.current?.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n\n\n  }, [addToast, history]);\n\n  const handleAvatarChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      const data = new FormData();\n      data.append('avatar', event.target.files[0]);\n      api.patch('users/avatar', data).then((response) => {\n        updateUser(response.data);\n        addToast({\n          type: 'success',\n          title: 'Avatar Atualizado'\n        })\n      })\n    }\n\n  }, [addToast, updateUser])\n\n  return (\n    <Container>\n      <header>\n        <div>\n\n          <Link to=\"/dashboard\">\n            <FiArrowLeft size={24} />\n          </Link>\n        </div>\n      </header>\n      <Content>\n        <Form ref={formRef} onSubmit={handleSubmit} initialData={{\n          name: user.name,\n          email: user.email\n        }}>\n          <AvatarInput>\n            <img src={user.avatar_url} alt={user.name} />\n            <label htmlFor=\"avatar\">\n              <FiCamera size={20} />\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n          <h1>Meu Perfil</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"old_password\" icon={FiLock} type=\"password\" placeholder=\"Senha Atual\" constainerStyle={{ marginTop: 24 }} />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Nova Senha\" />\n          <Input name=\"password_confirmation\" icon={FiLock} type=\"password\" placeholder=\"Confirma Nova Senha\" />\n          <Button type=\"submit\">Confirma Alteraçoes</Button>\n        </Form>\n      </Content>\n\n    </Container>\n  );\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}