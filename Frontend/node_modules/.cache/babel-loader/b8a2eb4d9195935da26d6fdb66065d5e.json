{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { Container } from './styles';\nimport { useField } from '@unform/core';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    error,\n    defaultValue\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [registerField, fieldName]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    ref: inputRef\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/dev/√Årea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","Container","useField","Input","name","icon","Icon","rest","inputRef","fieldName","registerField","error","defaultValue","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,QAAT,QAAyB,cAAzB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACrE,QAAMC,QAAQ,GAAER,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AAACS,IAAAA,SAAD;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAkDV,QAAQ,CAACE,IAAD,CAAhE;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZI,MAAAA,GAAG,EAAEL,QAAQ,CAACM,OAFF;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMP,CAACL,aAAD,EAAgBD,SAAhB,CANO,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE;AAAO,IAAA,GAAG,EAAEE;AAAZ,KAAyBD,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CAlBD;;AAoBA,eAAeJ,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef } from 'react';\nimport { Container } from './styles';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name ,icon: Icon, ...rest }) => {\n  const inputRef= useRef(null)\n  const {fieldName, registerField, error, defaultValue} = useField(name);\n\n  useEffect(()=>{\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  },[registerField, fieldName]);\n\n  return (\n    <Container >\n      { Icon && <Icon size={20} />}\n      <input ref={inputRef}{...rest} />\n    </Container>\n  );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}