{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/SignIn/index.tsx\";\n\n/* eslint-disable camelcase */\nimport React, { useRef, useCallback } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Link } from 'react-router-dom';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useAuth } from '../../Hooks/Auth';\nimport { useToast } from '../../Hooks/Toast';\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const {\n    SignIn,\n    user\n  } = useAuth();\n  const {\n    addToast\n  } = useToast();\n  console.log(user);\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().required('senha obrigatoria')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await SignIn({\n        email: data.email,\n        password: data.password\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errros = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro na Autenticaçao',\n        type: 'error',\n        description: 'Ocorreu um Erro ao fazer login'\n      });\n    }\n  }, [SignIn, addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Fa\\xE7a seu Logon\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Entrar\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Esqueci Minha Senha\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), \"Criar Conta\"))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/SignIn/index.tsx"],"names":["React","useRef","useCallback","FiLogIn","FiMail","FiLock","Form","Yup","getValidationErrors","Link","Container","Content","Background","AnimationContainer","Input","Button","useAuth","useToast","SignIn","formRef","user","addToast","console","log","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","validate","abortEarly","err","ValidationError","errros","title","type","description","logoImg"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { useRef, useCallback, useContext } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Link } from 'react-router-dom';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useAuth } from '../../Hooks/Auth';\nimport { useToast } from '../../Hooks/Toast';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { SignIn, user } = useAuth();\n  const { addToast } = useToast();\n\n  console.log(user);\n\n  const handleSubmit = useCallback(async (data: SignInFormData) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().required('senha obrigatoria'),\n      });\n      await schema.validate(data,{abortEarly: false});\n\n      await SignIn({\n        email: data.email,\n        password: data.password,\n      });\n    } catch (err) {\n      if(err instanceof Yup.ValidationError){\n\n        const errros = getValidationErrors(err)\n  \n        formRef.current?.setErrors(errros);\n        return; \n      }\n\n      addToast({\n        title: 'Erro na Autenticaçao',\n        type: 'error',\n        description: 'Ocorreu um Erro ao fazer login'\n      });\n      \n    }\n\n    \n  }, [SignIn, addToast]);\nreturn (\n  <Container>\n    <Content>\n      <AnimationContainer>\n\n        <img src={logoImg} />\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu Logon</h1>\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n          <Button type=\"submit\">Entrar</Button>\n          <a href=\"forgot\">Esqueci Minha Senha</a>\n        </Form>\n        <Link to=\"/signup\">\n          <FiLogIn />\n          Criar Conta\n          </Link>\n\n      </AnimationContainer>\n    </Content>\n    <Background />\n\n  </Container>\n  );\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}