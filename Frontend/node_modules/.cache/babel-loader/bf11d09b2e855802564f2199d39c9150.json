{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/signUp/index.tsx\";\n\n/* eslint-disable camelcase */\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\n\nconst SignUp = () => {\n  const formRef = useRef(null);\n  const handleSubmit = useCallback(async data => {\n    const {\n      addToast\n    } = useToast();\n    const history = useHistory();\n\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6, 'no minimo 6 caracteres')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/users', data);\n      history.push('/');\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errros = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n  }, [history, addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Fa\\xE7a seu Cadastro\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    icon: FiUser,\n    placeholder: \"Nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    icon: FiLock,\n    type: \"password\",\n    placeholder: \"Senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Cadastrar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), \"Voltar para Home\"))));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/signUp/index.tsx"],"names":["React","useCallback","useRef","FiArrowLeft","FiMail","FiUser","FiLock","Form","Yup","getValidationErrors","Container","Content","Background","AnimationContainer","Input","Button","Link","useHistory","api","useToast","SignUp","formRef","handleSubmit","data","addToast","history","current","setErrors","schema","object","shape","name","string","required","email","password","min","validate","abortEarly","post","push","type","title","description","err","ValidationError","errros","logoImg"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { useCallback, useRef } from 'react';\nimport { FiArrowLeft, FiMail, FiUser, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport { useToast } from '../../Hooks/Toast';\n\ninterface SignUpDataForm {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: SignUpDataForm) => {\n    const { addToast } = useToast();\n    const history = useHistory()\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Nome obrigatório'),\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n        password: Yup.string().min(6,'no minimo 6 caracteres'),\n      });\n      await schema.validate(data,{abortEarly: false});\n\n      await api.post('/users', data);\n      history.push('/')\n      addToast({\n        type: 'success',\n        title: 'Cadastro Realizado',\n        description: 'Voce Ja pode fazer seu logon no GoBarber'\n      })\n    } catch (err) {\n      if(err instanceof Yup.ValidationError){\n\n        const errros = getValidationErrors(err)\n  \n        formRef.current?.setErrors(errros);\n        return; \n      }\n\n      addToast({\n        title: 'Erro no Cadastro',\n        type: 'error',\n        description: 'Erro ao Fazer o Cadastro Tente Novamente'\n      });\n    }\n\n    \n  }, [history, addToast]);\n\n  return (\n  <Container>\n    <Background />\n    <Content>\n      <AnimationContainer>\n        <img src={logoImg} />\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu Cadastro</h1>\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n          <Input name=\"password\" icon={FiLock} type=\"password\" placeholder=\"Senha\" />\n          <Button type=\"submit\">Cadastrar</Button>\n        </Form>\n        <Link to=\"/\">\n          <FiArrowLeft />\n            Voltar para Home\n            </Link>\n      </AnimationContainer>\n\n    </Content>\n\n  </Container>\n  );\n}\n\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}