{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Dashboard/index.tsx\";\n\n/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  const [repositories, setReposiotories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GitHubExplorer:Repositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n\n    return [];\n  });\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setReposiotories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (error) {\n      setInputError('erro na busca por este repositorio');\n      setNewRepo('');\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem('@GitHubExplorer:Repositories', JSON.stringify(repositories));\n  }, [repositories]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"GitHub explore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Explore Repositorios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleAddRepository,\n    hasError: !!inputError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Digite o nome do Repositorio aqui\",\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repositories/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","Link","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","repositories","setReposiotories","storagedRepositories","localStorage","getItem","JSON","parse","newRepo","setNewRepo","inputError","setInputError","handleAddRepository","event","preventDefault","response","get","repository","data","error","setItem","stringify","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { useState, useEffect, FormEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n  description: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [repositories, setReposiotories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GitHubExplorer:Repositories',\n    );\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    }\n    return [];\n  });\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n      const repository = response.data;\n\n      setReposiotories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (error) {\n      setInputError('erro na busca por este repositorio');\n      setNewRepo('');\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GitHubExplorer:Repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n  return (\n    <>\n      <img src={logoImg} alt=\"GitHub explore\" />\n      <Title>Explore Repositorios no Github</Title>\n      <Form onSubmit={handleAddRepository} hasError={!!inputError}>\n        <input\n          placeholder=\"Digite o nome do Repositorio aqui\"\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}