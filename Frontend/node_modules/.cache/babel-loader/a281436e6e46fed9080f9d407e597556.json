{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/ForgotPassword/index.tsx\";\nimport React, { useRef, useCallback } from \"react\";\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Link, useHistory } from 'react-router-dom';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../Hooks/Toast';\n\nconst ForgotPassword = () => {\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const history = useHistory();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('email obrigatorio').email('digite um email valido')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      }); // Recuperaçao de senha\n\n      history.push('/dashboard');\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errros = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errros);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na Recuperaçao da senha',\n        description: 'Ocorreu um Erro ao tentar Recuperar a sua senha tente novamente'\n      });\n    }\n  }, [addToast, history]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Recuperar Senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    icon: FiMail,\n    placeholder: \"E-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Recuperar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), \"Voltar ao Login\"))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/dev/Área de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/pages/ForgotPassword/index.tsx"],"names":["React","useRef","useCallback","FiLogIn","FiMail","Form","Yup","getValidationErrors","Link","useHistory","Container","Content","Background","AnimationContainer","Input","Button","useToast","ForgotPassword","formRef","addToast","history","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","push","err","ValidationError","errros","type","title","description","logoImg"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useContext } from \"react\";\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Container, Content, Background, AnimationContainer } from './styles';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { useToast } from '../../Hooks/Toast';\n\ninterface ForgotPasswordFormData {\n  email: string;\n  password: string;\n}\n\nconst ForgotPassword: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(async (data: ForgotPasswordFormData) => {\n    try {\n      formRef.current?.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('email obrigatorio').email('digite um email valido'),\n      });\n      await schema.validate(data, { abortEarly: false });\n\n      // Recuperaçao de senha\n\n      history.push('/dashboard')\n\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n\n        const errros = getValidationErrors(err)\n\n        formRef.current?.setErrors(errros);\n\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na Recuperaçao da senha',\n        description: 'Ocorreu um Erro ao tentar Recuperar a sua senha tente novamente'\n      });\n\n    }\n\n\n  }, [addToast, history]);\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n\n          <img src={logoImg} />\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar Senha</h1>\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n            <Button type=\"submit\">Recuperar</Button>\n          </Form>\n          <Link to=\"/signin\">\n            <FiLogIn />\n          Voltar ao Login\n          </Link>\n\n        </AnimationContainer>\n      </Content>\n      <Background />\n\n    </Container>\n  );\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}