{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/Hooks/Toast.tsx\";\nimport React, { createContext, useContext, useCallback, useState } from 'react';\nimport ToastContainer from '../components/ToatsContainer/index';\nconst ToastContext = createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  const addToast = useCallback(() => {}, []);\n  const removeToast = useCallback(() => {}, []);\n  const [messages, setMessages] = useState([]);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction useToast() {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used whitin a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };","map":{"version":3,"sources":["/home/dev/√Årea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/Hooks/Toast.tsx"],"names":["React","createContext","useContext","useCallback","useState","ToastContainer","ToastContext","ToastProvider","children","addToast","removeToast","messages","setMessages","useToast","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAcA,MAAMC,YAAY,GAAGL,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMM,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,QAAQ,GAAGN,WAAW,CAAC,MAAM,CAAE,CAAT,EAAU,EAAV,CAA5B;AACA,QAAMO,WAAW,GAAGP,WAAW,CAAC,MAAM,CAAE,CAAT,EAAU,EAAV,CAA/B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOD,CAXD;;AAaA,SAASK,QAAT,GAAsC;AACpC,QAAMC,OAAO,GAAGZ,UAAU,CAACI,YAAD,CAA1B;;AAEA,MAAG,CAACQ,OAAJ,EAAY;AACV,UAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD;;AAED,SAASP,aAAT,EAAwBM,QAAxB","sourcesContent":["import React, { createContext, useContext, useCallback, useState } from 'react';\nimport ToastContainer from '../components/ToatsContainer/index';\n\ninterface   ToastContextData{\n  addToast(): void;\n  removeToast(): void;\n}\n\ninterface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const addToast = useCallback(() => {},[]);\n  const removeToast = useCallback(() => {},[]);\n  const [messages, setMessages] = useState([]);\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer />\n    </ToastContext.Provider>\n\n  );\n}\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if(!context){\n    throw new Error('useToast must be used whitin a ToastProvider')\n  }\n  return context;\n}\n\nexport { ToastProvider, useToast }; "]},"metadata":{},"sourceType":"module"}