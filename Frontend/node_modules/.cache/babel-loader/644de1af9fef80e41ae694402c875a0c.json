{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container } from './styles';\nimport { useField } from '@unform/core';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    registerField,\n    error,\n    defaultValue\n  } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [registerField, fieldName]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    ref: inputRef\n  }, rest, {\n    onFocus: () => setIsFocused(true),\n    onBlur: () => setIsFocused(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/dev/√Årea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","Container","useField","Input","name","icon","Icon","rest","inputRef","fieldName","registerField","error","defaultValue","isFocused","setIsFocused","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,SAASC,QAAT,QAAyB,cAAzB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACrE,QAAMC,QAAQ,GAAET,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AAACU,IAAAA,SAAD;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAkDV,QAAQ,CAACE,IAAD,CAAhE;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,aAAa,CAAC;AACZN,MAAAA,IAAI,EAAEK,SADM;AAEZM,MAAAA,GAAG,EAAEP,QAAQ,CAACQ,OAFF;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAD,CAAb;AAKD,GANQ,EAMP,CAACP,aAAD,EAAgBD,SAAhB,CANO,CAAT;AAQA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEI,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIP,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,eAEE;AAAO,IAAA,GAAG,EAAEE;AAAZ,KAAyBD,IAAzB;AACA,IAAA,OAAO,EAAE,MAAKO,YAAY,CAAC,IAAD,CAD1B;AAEA,IAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,KAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AASD,CAtBD;;AAwBA,eAAeX,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef, useState } from 'react';\nimport { Container } from './styles';\nimport { IconBaseProps } from 'react-icons';\nimport { useField } from '@unform/core';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name ,icon: Icon, ...rest }) => {\n  const inputRef= useRef(null)\n  const {fieldName, registerField, error, defaultValue} = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n\n  useEffect(()=>{\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  },[registerField, fieldName]);\n\n  return (\n    <Container isFocused={isFocused}>\n      { Icon && <Icon size={20} />}\n      <input ref={inputRef}{...rest} \n      onFocus={()=> setIsFocused(true)}\n      onBlur={() => setIsFocused(false)}\n      />\n    </Container>\n  );\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}