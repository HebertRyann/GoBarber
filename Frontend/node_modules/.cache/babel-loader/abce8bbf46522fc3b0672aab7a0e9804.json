{"ast":null,"code":"var _jsxFileName = \"/home/dev/\\xC1rea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/ToatsContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi';\nimport { Container } from './styles';\nimport { useToast } from '../../../Hooks/Toast';\nconst icons = {\n  info: /*#__PURE__*/React.createElement(FiInfo, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }),\n  error: /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  }),\n  success: /*#__PURE__*/React.createElement(FiCheckCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  })\n};\n\nconst Toast = ({\n  message\n}) => {\n  const {\n    removeToast\n  } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message.id, removeToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    type: message.type,\n    hasDescription: !!message.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, message.title), message.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, message.description)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => removeToast(message.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/home/dev/√Årea de Trabalho/DevProjetos/Projetos/GoBarber/Frontend/src/components/ToatsContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","FiCheckCircle","FiInfo","Container","useToast","icons","info","error","success","Toast","message","removeToast","timer","setTimeout","id","clearTimeout","type","description","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,aAAnC,EAAkDC,MAAlD,QAAgE,gBAAhE;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAAuBC,QAAvB,QAAuC,sBAAvC;AAMA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,eAAE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM;AAEZC,EAAAA,KAAK,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK;AAGZC,EAAAA,OAAO,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHG,CAAd;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,QAAQ,EAAhC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,KAAK,GAAEC,UAAU,CAAC,MAAM;AAC5BF,MAAAA,WAAW,CAACD,OAAO,CAACI,EAAT,CAAX;AACD,KAFsB,EAEpB,IAFoB,CAAvB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACF,OAAO,CAACI,EAAT,EAAaH,WAAb,CARM,CAAT;AAUA,sBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAED,OAAO,CAACM,IAAzB;AAA+B,IAAA,cAAc,EAAE,CAAC,CAACN,OAAO,CAACO,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,OAAO,CAACQ,KAAjB,CADF,EAEGR,OAAO,CAACO,WAAR,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,OAAO,CAACO,WAAZ,CAF1B,CAHF,eAOE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMN,WAAW,CAACD,OAAO,CAACI,EAAT,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAaD,CA1BD;;AA4BA,eAAeL,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi';\nimport { Container } from './styles';\nimport { ToastMessage, useToast } from '../../../Hooks/Toast'\n\ninterface ToastProps {\n  message: ToastMessage;\n}\n\nconst icons = {\n  info: <FiInfo size={24}/>,\n  error: <FiAlertCircle size={24}/>,\n  success: <FiCheckCircle size={24}/>\n}\n\nconst Toast: React.FC<ToastProps> = ({ message }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer= setTimeout(() => {\n      removeToast(message.id)\n    }, 3000)\n\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [message.id, removeToast])\n\n  return (\n    <Container type={message.type} hasDescription={!!message.description}>\n      <FiAlertCircle size={20} />\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n      <button type=\"button\" onClick={() => removeToast(message.id)}>\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n}\n\nexport default Toast;"]},"metadata":{},"sourceType":"module"}